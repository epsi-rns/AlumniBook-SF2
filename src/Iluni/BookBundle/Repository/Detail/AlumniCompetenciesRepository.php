<?php

namespace Iluni\BookBundle\Repository\Detail;

use Iluni\BookBundle\Repository\CommonConstraintRepository;

/**
 * ACompetenciesRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class AlumniCompetenciesRepository extends CommonConstraintRepository
{
    protected static $order_by_choices = array(
        1  => 'r.id',
        21 => 'a.name',
        45 => 'c.id, a.name',
        101 => 'ac.community, a.name',
        102 => 'ac.department, ac.program, ac.classYear, a.name',
        103 => 'ac.faculty, ac.department, ac.program, ac.classYear, a.name',
        104 => 'ac.program, ac.department, ac.classYear, a.name',
        105 => 'ac.classYear, ac.department, a.name'    // default
    );

    public function findQueryFilter($constraint = array())
    {
        $this->qb = $this->createQueryBuilder('r')
            ->select('r, a, c, ac')
            ->leftJoin('r.alumni', 'a')
            ->leftJoin('r.competency', 'c')
            ->leftJoin('a.acommunities', 'ac');

        $this->checkConstraintOrderBy($constraint);
        $this->checkConstraintCompetency($constraint);
        $this->checkConstraintCommunity($constraint);

        $query = $this->qb->getQuery();
        $query->setHint(
            \Doctrine\ORM\Query::HINT_CUSTOM_OUTPUT_WALKER,
            'Gedmo\\Translatable\\Query\\TreeWalker\\TranslationWalker'
        );

        return $this->qb->getQuery();
    }

    protected function checkConstraintCompetency($constraint = array())
    {
        if (isset($constraint['competency'])) {
            $this->qb
                ->where('c.id = :competency_id')
                ->setParameter('competency_id', $constraint['competency']);
        }
    }

    public function findList($aid)
    {
        $qb = $this->createQueryBuilder('r')
            ->select('r, c')
            ->leftJoin('r.alumni', 'a')
            ->leftJoin('r.competency', 'c')
            ->where('a.id = :aid')
            ->setParameter('aid', $aid);

        $query = $qb->getQuery();
        $query->setHint(
            \Doctrine\ORM\Query::HINT_CUSTOM_OUTPUT_WALKER,
            'Gedmo\\Translatable\\Query\\TreeWalker\\TranslationWalker'
        );
        return $query->getResult();
    }
}

