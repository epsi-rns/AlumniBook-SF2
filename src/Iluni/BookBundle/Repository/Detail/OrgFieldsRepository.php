<?php

namespace Iluni\BookBundle\Repository\Detail;

use Iluni\BookBundle\Repository\CommonConstraintRepository;

/**
 * OFieldsRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class OrgFieldsRepository extends CommonConstraintRepository
{
    protected static $order_by_choices = array(
        3  => 'r.id',
        23 => 'o.name', // default
        30 => 'r.product, r.bizField, o.name',
        46 => 'r.bizField, o.name'
    );

    public function findQueryFilter($constraint = array())
    {
        $this->qb = $this->createQueryBuilder('r')
            ->select('r, o, f')
            ->leftJoin('r.organization', 'o')
            ->leftJoin('r.bizField', 'f');

        $this->checkConstraintOrderBy($constraint);
        $this->checkConstraintBusinessField($constraint);

        $query = $this->qb->getQuery();
        $query->setHint(
            \Doctrine\ORM\Query::HINT_CUSTOM_OUTPUT_WALKER,
            'Gedmo\\Translatable\\Query\\TreeWalker\\TranslationWalker'
        );

        return $this->qb->getQuery();
    }

    protected function checkConstraintBusinessField($constraint = array())
    {
        if (isset($constraint['bizField'])) {
            $this->qb
                ->where('f.id = :business_field_id')
                ->setParameter('business_field_id', $constraint['bizField']);
        }
    }


    public function findList($oid)
    {
        $qb = $this->createQueryBuilder('r')
            ->select('r, f')
            ->leftJoin('r.organization', 'o')
            ->leftJoin('r.bizField', 'f')
            ->where('o.id = :oid')
            ->setParameter('oid', $oid);

        $query = $qb->getQuery();
        $query->setHint(
            \Doctrine\ORM\Query::HINT_CUSTOM_OUTPUT_WALKER,
            'Gedmo\\Translatable\\Query\\TreeWalker\\TranslationWalker'
        );

        return $query->getResult();
    }
}

